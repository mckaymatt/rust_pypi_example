
# rustup requires this 2015 or newer
image: Visual Studio 2015

environment:
  global:
  # TODO This is the Rust channel that build jobs will use by default but can be
  # overridden on a case by case basis down below
    RUST_VERSION: stable

  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  matrix:
    # MinGW
    # - TARGET: i686-pc-windows-gnu
    # - TARGET: x86_64-pc-windows-gnu

    # MSVC
    - TARGET: i686-pc-windows-msvc
      PYTHON_DIR: "C:\\Python27"
      WHEELPLATFORM: win32

    - TARGET: x86_64-pc-windows-msvc
      PYTHON_DIR: "C:\\Python27-x64"
      WHEELPLATFORM: win_amd64

    - TARGET: i686-pc-windows-msvc
      PYTHON_DIR: "C:\\Python35"
      WHEELPLATFORM: win32

    - TARGET: x86_64-pc-windows-msvc
      PYTHON_DIR: "C:\\Python35-x64"
      WHEELPLATFORM: win_amd64


    # Testing other channels
    # - TARGET: x86_64-pc-windows-gnu
    #   RUST_VERSION: nightly
    # - TARGET: x86_64-pc-windows-msvc
      # RUST_VERSION: nightly

matrix:
  fast_finish: true

init:
  - "%PYTHON_DIR%\\python.exe -m pip install pip==9.0.1 scikit-ci==0.14.0"

install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V
  - "%PYTHON_DIR%\\python -m ci install"

build_script:
  - "%PYTHON_DIR%\\python -m ci build"

test_script:
  - "%PYTHON_DIR%\\python -m ci test"

deploy:
  artifact: dist\**\*.whl
  type: File
  # TODO update `auth_token.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it. Go to https://ci.appveyor.com/tools/encrypt
  # - Paste the output down here
  auth_token:
    secure: Z4WsdThBV6yomQH4V2M/T5/q1khChRPklJ+xDILxO34QGwcbqH2H0wlWvX+B+B89
  description: ''
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    RUST_VERSION: stable
    appveyor_repo_tag: true
  provider: GitHub

cache:
  - C:\Users\appveyor\.cargo\registry

branches:
  only:
    # Release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  - provider: Email
    to:
      - mckaymatt@gmail.com
    on_build_success: false
    on_build_failure: false
